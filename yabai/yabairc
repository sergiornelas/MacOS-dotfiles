#!/usr/bin/env sh
# https://github.com/koekeishiya/yabai/blob/master/doc/yabai.asciidoc

# Updated restart service command
# yabai --restart-service

# Whenever you update Yabai, add again the script addition for --load-sa when boot:
# 1) Execute this command:
#    echo "$(whoami) ALL=(root) NOPASSWD: sha256:$(shasum -a 256 $(which yabai) | cut -d " " -f 1) $(which yabai) --load-sa"
# 2) Paste the result into this file (replace current line):
#    sudo visudo -f /private/etc/sudoers.d/yabai
#    (the only updated value is the hash)
# For reference:
# https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup

# Install specific yabai version once it breaks:
# https://github.com/koekeishiya/yabai/issues/1131
# 'nvm I figured out how to do it!'

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# Get the names of all running applications
# yabai -m query --windows | jq -r '.[].app'

# Get the name of current focused app
# yabai -m query --windows --window | jq -r '.app'

# Global settings
yabai -m config \
  external_bar               all:25:0     \
  mouse_follows_focus        off          \
  focus_follows_mouse        off          \
  window_origin_display      default      \
  window_placement           second_child \
  window_topmost             off          \
  window_shadow              on           \
  window_opacity             on           \
  window_opacity_duration    0.0          \
  window_animation_duration  0.0          \
  active_window_opacity      1.0          \
  normal_window_opacity      1.0          \
  split_ratio                0.50         \
  split_type                 auto         \
  auto_balance               off

# yabai -m config mouse_modifier alt
# # left click + drag
# yabai -m config mouse_action1 move
# # right click + drag
# yabai -m config mouse_action2 resize

# Space settings
yabai -m config \
  layout         bsp \
  top_padding    11   \
  bottom_padding 11   \
  left_padding   11   \
  right_padding  11   \
  window_gap     11

# Rule
alias yr='yabai -m rule --add'
yr app="^Activity Monitor$" manage=off
yr app="^Calculator$" manage=off
yr app="^Cisco AnyConnect Secure Mobility Client$" sticky=on manage=off
yr app="^Disk Utility$" manage=off
yr app="^Finder$" manage=off
yr app="^Karabiner-Elements$" manage=off
yr app="^Karabiner-EventViewer$" manage=off
yr app="^KeePassXC$" manage=off
yr app="^Path Finder$" manage=off
yr app="^Preview$" manage=off
yr app="^QuickTime Player$" manage=off
yr app="^Slack$" space=2
yr app="^Spotify$" space=4
yr app="^System Information$" manage=off
yr app="^System Preferences$" manage=off
yr app="^System Settings$" manage=off
yr app="^Mousecape$" manage=off
# yr app="^(Brave|Google\ Chrome)$" layer=below
# yr app="^kitty$" layer=above

yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
# Sketchybar:
yabai -m signal --add event=window_focused action="sketchybar -m --trigger window_focus &> /dev/null"
yabai -m signal --add event=window_title_changed action="sketchybar -m --trigger title_change &> /dev/null"

borders active_color=0xFFEBDBB2 inactive_color=0xff494d64 width=4.0 &

# Ghostty workaround (not working as expected):
# yabai -m signal --add app='^Ghostty$' event=window_created action='yabai -m space --layout bsp'
# yabai -m signal --add app='^Ghostty$' event=window_destroyed action='yabai -m space --layout bsp'
